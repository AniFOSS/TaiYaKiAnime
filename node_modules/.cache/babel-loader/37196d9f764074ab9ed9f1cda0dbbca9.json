{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgarcia/Documents/taiyaki-web/src/components/buttons.tsx\";\nimport React, { useEffect } from 'react';\nimport { platformToText, platformToIcon } from '../models/platform_enums';\nimport '../styles/buttons.css';\n\nconst PlatformButtons = props => {\n  const tap = () => {\n    console.log(\"ap\");\n  };\n\n  useEffect(() => {\n    tap.bind(this);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: [\"Button-outline\", props.platform].join(\" \"),\n    key: props.platform,\n    onClick: tap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, props.platform === \"github\" ? \"View on\" : \"Download for\", \" \", platformToText.get(props.platform)), /*#__PURE__*/React.createElement(\"img\", {\n    src: platformToIcon.get(props.platform),\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default PlatformButtons;","map":{"version":3,"sources":["/Users/michaelgarcia/Documents/taiyaki-web/src/components/buttons.tsx"],"names":["React","useEffect","platformToText","platformToIcon","PlatformButtons","props","tap","console","log","bind","platform","join","get"],"mappings":";AAAA,OAAOA,KAAP,IAAmBC,SAAnB,QAAmC,OAAnC;AACA,SAAwBC,cAAxB,EAAwCC,cAAxC,QAA8D,0BAA9D;AACA,OAAO,uBAAP;;AASA,MAAMC,eAA0B,GAAIC,KAAD,IAAW;AAC1C,QAAMC,GAAG,GAAG,MAAM;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,GAFD;;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,GAAG,CAACG,IAAJ,CAAS,IAAT;AACH,GAFQ,CAAT;AAGA,sBACI;AAAK,IAAA,SAAS,EAAE,CAAC,gBAAD,EAAmBJ,KAAK,CAACK,QAAzB,EAAmCC,IAAnC,CAAwC,GAAxC,CAAhB;AACA,IAAA,GAAG,EAAEN,KAAK,CAACK,QADX;AAEA,IAAA,OAAO,EAAEJ,GAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACK,QAAN,KAAmB,QAAnB,GAA8B,SAA9B,GAA0C,cAA9C,OAA+DR,cAAc,CAACU,GAAf,CAAmBP,KAAK,CAACK,QAAzB,CAA/D,CAJJ,eAKI;AAAK,IAAA,GAAG,EAAEP,cAAc,CAACS,GAAf,CAAmBP,KAAK,CAACK,QAAzB,CAAV;AAA8C,IAAA,SAAS,EAAC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAUH,CAlBD;;AAoBA,eAAeN,eAAf","sourcesContent":["import React, {FC, useEffect} from 'react';\nimport { PlatformTypes, platformToText, platformToIcon } from '../models/platform_enums';\nimport '../styles/buttons.css';\nimport {githubLink} from '../models/constants';\n\n\ninterface Props {\n    platform: PlatformTypes;\n    \n}\n\nconst PlatformButtons: FC<Props> = (props) => {\n    const tap = () => {\n        console.log(\"ap\");\n    }\n\n    useEffect(() => {\n        tap.bind(this);\n    })\n    return (\n        <div className={[\"Button-outline\", props.platform].join(\" \")} \n        key={props.platform}\n        onClick={tap}\n        >\n            <a>{props.platform === \"github\" ? \"View on\" : \"Download for\"} {platformToText.get(props.platform)}</a>\n            <img src={platformToIcon.get(props.platform)} className=\"logo\"/>\n            </div> \n            \n    );\n}\n\nexport default PlatformButtons;"]},"metadata":{},"sourceType":"module"}