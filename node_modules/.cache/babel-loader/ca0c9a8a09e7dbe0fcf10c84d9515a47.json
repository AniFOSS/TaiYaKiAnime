{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgarcia/Documents/taiyaki-web/src/App.tsx\";\nimport React, { useRef } from 'react';\nimport logo from \"./logo.svg\";\nimport mock1 from \"./assets/mock.svg\";\nimport { Toolbar, AppBar } from '@material-ui/core';\nimport { Row } from 'react-grid-system';\nimport './App.css';\nimport Grid from './components/grid';\nimport PlatformButtons from './components/buttons';\nimport { githubLink } from './models/constants';\n\nconst _scrollHere = ref => {\n  var _ref$current;\n\n  return window.scrollTo({\n    behavior: \"smooth\",\n    top: ref === null || ref === void 0 ? void 0 : (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.offsetTop\n  });\n};\n\nfunction Body() {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: [\"Header\", \"Title\"].join(\" \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Taiyaki\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: [\"Desc\", \"Roboto\"].join(\" \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Watch and sync your anime\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Container-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PlatformButtons, {\n    platform: \"ios\",\n    onClick: () => window.open(githubLink + \"/releases\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PlatformButtons, {\n    platform: \"android\",\n    onClick: () => window.open(githubLink + \"/releases\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(PlatformButtons, {\n    platform: \"github\",\n    onClick: () => window.open(githubLink),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontStyle: \"italic\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Note: Taiyaki is currently in Beta. You may encounter bugs\")));\n}\n\nfunction LogoView() {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Logo-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"Logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction Image() {\n  return /*#__PURE__*/React.createElement(\"img\", {\n    src: mock1,\n    className: \"Mock1\",\n    alt: \"mock\",\n    style: {\n      alignSelf: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction App() {\n  const _ref = useRef(null);\n\n  const _scroll = () => _scrollHere(_ref);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: \"Tool-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/\",\n    style: {\n      textDecoration: \"none\",\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: [\"Header\", \"Roboto\"].join(\" \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 8\n    }\n  }, \"Taiyaki\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 8\n    }\n  }, \" - Watch and sync\")), /*#__PURE__*/React.createElement(\"a\", {\n    className: [\"App-link\", \"smoothLink\"].join(\" \"),\n    onClick: _scroll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 8\n    }\n  }, \"About\"))))), /*#__PURE__*/React.createElement(Row, {\n    align: \"center\",\n    className: \"Row-column\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(LogoView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    align: \"center\",\n    justify: \"around\",\n    className: \"Row-second\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: _ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    key: \"1\",\n    data: _data1,\n    title: \"About\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 22\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontStyle: \"italice\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }\n  }, \"This website is going under maintenance\")));\n}\n\nexport default App;\nconst _data1 = [\"Taiyaki does not condone piracy, and is only intended to make it easier for the user to view content without the overbearing amount of advirtisements these websites create for the user. Thus creating a safer and cleaner situation and reducing and even eliminating the risk of a/ny malicious virus(es)\"];","map":{"version":3,"sources":["/Users/michaelgarcia/Documents/taiyaki-web/src/App.tsx"],"names":["React","useRef","Toolbar","AppBar","Row","Grid","PlatformButtons","githubLink","_scrollHere","ref","window","scrollTo","behavior","top","current","offsetTop","Body","join","open","fontStyle","LogoView","logo","Image","mock1","alignSelf","App","_ref","_scroll","textDecoration","color","_data1"],"mappings":"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","sourcesContent":[" import React, {useRef, useEffect} from 'react';\n import logo from './logo.svg';\n import mock1 from './assets/mock.svg';\n import  { Toolbar, AppBar } from '@material-ui/core';\n import {Row, Container} from 'react-grid-system';\n import './App.css';\nimport Grid from './components/grid';\nimport PlatformButtons from './components/buttons';\nimport { githubLink } from './models/constants';\nimport { exec } from 'child_process';\n\n\nconst _scrollHere = (ref:any) => window.scrollTo({behavior: \"smooth\", top: ref?.current?.offsetTop });\n\nfunction Body() {\n  return (\n    <React.Fragment>\n      <div className=\"Body\">\n      <div className={[\"Header\", \"Title\"].join(\" \")}>Taiyaki</div>\n      <div className={[\"Desc\", \"Roboto\"].join(\" \")}>Watch and sync your anime</div>\n      <div className=\"Container-items\">\n      <PlatformButtons \n      platform={\"ios\"}\n      onClick={() => window.open(githubLink + \"/releases\")}\n      />\n      <PlatformButtons \n      platform={\"android\"}\n      onClick={() => window.open(githubLink + \"/releases\")}\n      />\n      </div>\n      <PlatformButtons \n      platform={\"github\"}\n      onClick={() => window.open(githubLink)}\n      />\n      <span\n        style={{fontStyle: \"italic\"}}\n      >Note: Taiyaki is currently in Beta. You may encounter bugs</span>\n      </div>\n    </React.Fragment>\n  );\n}\n\nfunction LogoView() {\n  return (\n    <React.Fragment>\n      <div className=\"Logo-view\">\n        <img  src={logo} className=\"Logo\" alt=\"logo\"/>\n        <Body/>\n      </div>\n    </React.Fragment>\n  );\n}\n\nfunction Image() {\n  return (\n    <img src={mock1} className=\"Mock1\" alt=\"mock\" style={{alignSelf: \"center\"}}/>\n  );\n}\n\n\n\nfunction App() {\n  const _ref = useRef(null);\n  const _scroll = () => _scrollHere(_ref);\n\n  return (\n   <React.Fragment>\n   <div className=\"App\">\n   <header className=\"App-header\">\n  \n   <AppBar position=\"fixed\">\n     <Toolbar className=\"Tool-bar\">{\n       <>\n       <a href=\"/\" style={{textDecoration: \"none\", color: \"white\"}}>\n       <a className={[\"Header\", \"Roboto\"].join(\" \")}\n       >Taiyaki</a>\n       <span> - Watch and sync</span>\n       </a>\n       <a\n       className={[\"App-link\", \"smoothLink\"].join(\" \")}\n       onClick={_scroll}\n       >About\n       </a>\n       </>\n     }</Toolbar>\n   </AppBar>\n   </header>\n   \n   <Row align=\"center\" className=\"Row-column\" justify=\"center\">\n   <LogoView/>\n   <Image/>\n   </Row>\n\n     \n     <Row align=\"center\" justify=\"around\" className=\"Row-second\" >\n     <div ref={_ref}><Grid key={\"1\"} data={_data1} title=\"About\" /></div>\n     </Row>\n     <p style={{fontStyle: \"italice\"}}>This website is going under maintenance</p>\n   </div>\n   </React.Fragment>\n  )\n}\n\nexport default App;\n\nconst _data1 = [\n  \"Taiyaki does not condone piracy, and is only intended to make it easier for the user to view content without the overbearing amount of advirtisements these websites create for the user. Thus creating a safer and cleaner situation and reducing and even eliminating the risk of a/ny malicious virus(es)\"\n]"]},"metadata":{},"sourceType":"module"}