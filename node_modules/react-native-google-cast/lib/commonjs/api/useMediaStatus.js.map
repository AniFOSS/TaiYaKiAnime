{"version":3,"sources":["useMediaStatus.ts"],"names":["useMediaStatus","client","mediaStatus","setMediaStatus","getMediaStatus","then","subscription","onMediaStatusUpdated","remove"],"mappings":";;;;;;;AAAA;;AAEA;;;;AAEe,SAASA,cAAT,GAA0B;AACvC,QAAMC,MAAM,GAAG,oCAAf;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC,qBAA6B,IAA7B,CAAtC;AAEA,wBAAU,MAAM;AACd,QAAI,CAACF,MAAL,EAAa;AACXE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA;AACD;;AAEDF,IAAAA,MAAM,CAACG,cAAP,GAAwBC,IAAxB,CAA6BF,cAA7B;AAEA,UAAMG,YAAY,GAAGL,MAAM,CAACM,oBAAP,CAA4BJ,cAA5B,CAArB;AAEA,WAAO,MAAM;AACXG,MAAAA,YAAY,CAACE,MAAb;AACD,KAFD;AAGD,GAbD,EAaG,CAACP,MAAD,CAbH;AAeA,SAAOC,WAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react'\nimport MediaStatus from '../types/MediaStatus'\nimport useRemoteMediaClient from './useRemoteMediaClient'\n\nexport default function useMediaStatus() {\n  const client = useRemoteMediaClient()\n  const [mediaStatus, setMediaStatus] = useState<MediaStatus | null>(null)\n\n  useEffect(() => {\n    if (!client) {\n      setMediaStatus(null)\n      return\n    }\n\n    client.getMediaStatus().then(setMediaStatus)\n\n    const subscription = client.onMediaStatusUpdated(setMediaStatus)\n\n    return () => {\n      subscription.remove()\n    }\n  }, [client])\n\n  return mediaStatus\n}\n"]}