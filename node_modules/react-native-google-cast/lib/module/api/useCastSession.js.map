{"version":3,"sources":["useCastSession.ts"],"names":["useEffect","useState","SessionManager","useCastSession","castSession","setCastSession","manager","getCurrentCastSession","then","started","onSessionStarted","suspended","onSessionSuspended","resumed","onSessionResumed","ending","onSessionEnding","remove"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA;;;;;;;;;;;;;;;;;AAiBA,eAAe,SAASC,cAAT,GAA0B;AACvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAqB,IAArB,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACC,qBAAR,GAAgCC,IAAhC,CAAqCH,cAArC;AAEA,UAAMI,OAAO,GAAGH,OAAO,CAACI,gBAAR,CAAyBL,cAAzB,CAAhB;AACA,UAAMM,SAAS,GAAGL,OAAO,CAACM,kBAAR,CAA2B,MAAMP,cAAc,CAAC,IAAD,CAA/C,CAAlB;AACA,UAAMQ,OAAO,GAAGP,OAAO,CAACQ,gBAAR,CAAyBT,cAAzB,CAAhB;AACA,UAAMU,MAAM,GAAGT,OAAO,CAACU,eAAR,CAAwB,MAAMX,cAAc,CAAC,IAAD,CAA5C,CAAf;AAEA,WAAO,MAAM;AACXI,MAAAA,OAAO,CAACQ,MAAR;AACAN,MAAAA,SAAS,CAACM,MAAV;AACAJ,MAAAA,OAAO,CAACI,MAAR;AACAF,MAAAA,MAAM,CAACE,MAAP;AACD,KALD;AAMD,GAdQ,EAcN,EAdM,CAAT;AAgBA,SAAOb,WAAP;AACD;AAED,MAAME,OAAO,GAAG,IAAIJ,cAAJ,EAAhB","sourcesContent":["import { useEffect, useState } from 'react'\nimport CastSession from './CastSession'\nimport SessionManager from './SessionManager'\n\n/**\n * Hook that provides the current {@link CastSession} (may be `null`).\n *\n * @example\n * ```js\n * import { useCastSession } from 'react-native-google-cast'\n *\n * function MyComponent() {\n *   const castSession = useCastSession()\n *\n *   if (castSession) {\n *     castSession.client.loadMedia(...)\n *   }\n * }\n * ```\n */\n\nexport default function useCastSession() {\n  const [castSession, setCastSession] = useState<CastSession | null>(null)\n\n  useEffect(() => {\n    manager.getCurrentCastSession().then(setCastSession)\n\n    const started = manager.onSessionStarted(setCastSession)\n    const suspended = manager.onSessionSuspended(() => setCastSession(null))\n    const resumed = manager.onSessionResumed(setCastSession)\n    const ending = manager.onSessionEnding(() => setCastSession(null))\n\n    return () => {\n      started.remove()\n      suspended.remove()\n      resumed.remove()\n      ending.remove()\n    }\n  }, [])\n\n  return castSession\n}\n\nconst manager = new SessionManager()\n"]}