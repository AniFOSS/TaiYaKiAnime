{"version":3,"sources":["Assets/screenshot_main.png","Assets/screenshot_tracker.png","Assets/screenshot_update_status.png","Assets/screenshot_queue.png","Assets/screenshot_spoiler.png","Assets/Background/background1.jpg","Assets/Background/background_2.png","Assets/Background/background_3.jpg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","props","useSpring","config","duration","to","opacity","transform","from","isDesktopOrLaptop","useMediaQuery","query","mock1Ref","useRef","View","styled","header","ViewMobile","Button","button","ButtonMobile","ScreenShotImage","img","ScreenShotImageMobile","TextView","div","BoldText","span","BoldTextMobile","RegularText","RegularTextMobile","_onClickDownload","window","open","Block","index","title","description","className","size","color","style","textAlign","fontSize","marginTop","justifyContent","alignItems","flexDirection","height","backgroundColor","display","width","onClick","ref","src","mock1","alt","overflow","background1","position","trackerMock","marginBottom","updateStatusMock","background2","marginLeft","queueMock","background3","flex","spoilerMock","fontWeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.653e1b27.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/screenshot_main.e5a7c5c5.png\";","export default __webpack_public_path__ + \"static/media/screenshot_tracker.ab49158e.png\";","export default __webpack_public_path__ + \"static/media/screenshot_update_status.eb5e5d06.png\";","export default __webpack_public_path__ + \"static/media/screenshot_queue.c6c3380d.png\";","export default __webpack_public_path__ + \"static/media/screenshot_spoiler.802a764c.png\";","export default __webpack_public_path__ + \"static/media/background1.6e26d64d.jpg\";","export default __webpack_public_path__ + \"static/media/background_2.cf529410.png\";","export default __webpack_public_path__ + \"static/media/background_3.985bd795.jpg\";","/* eslint-disable */\nimport React, { useRef } from 'react';\nimport './App.css';\nimport { useMediaQuery } from 'react-responsive';\nimport styled from 'styled-components';\nimport { FiGlobe, FiRss, FiBookOpen } from 'react-icons/fi';\nimport { useSpring, animated } from 'react-spring';\n\nimport mock1 from './Assets/screenshot_main.png';\n\nimport trackerMock from './Assets/screenshot_tracker.png';\nimport updateStatusMock from './Assets/screenshot_update_status.png';\nimport queueMock from './Assets/screenshot_queue.png';\nimport spoilerMock from './Assets/screenshot_spoiler.png';\n\nimport background1 from './Assets/Background/background1.jpg';\nimport background2 from './Assets/Background/background_2.png';\nimport background3 from './Assets/Background/background_3.jpg';\n\nfunction App() {\n  const props = useSpring({\n    config: { duration: 1450 },\n    to: { opacity: 1, transform: 'scale(1)' },\n    from: { opacity: 0, transform: 'scale(0.85)' },\n  });\n\n  const isDesktopOrLaptop = useMediaQuery({\n    query: '(min-device-width: 1224px)',\n  });\n\n  const mock1Ref = useRef<any>(null);\n\n  const View = styled.header`\n  display: flex;\n  flex: 1;\n  background: #31055b;\n  min-height: auto;\n  flex-direction: row;\n  `;\n\n  const ViewMobile = styled.header`\n  display: flex;\n  flex: 1;\n  background: #31055b;\n  flex-direction: column;\n  position: relative;\n  `;\n\n  const Button = styled.button`\n  border-radius: 6pt;\n  background-color: #48bf84;\n  color: white;\n  min-height: 45pt;\n  width: 40%;\n  font-size: 19pt;\n  font-weight: 600;\n  border: none;\n  margin-top: 12pt;\n  &:hover{\n    background-color: green;\n  }\n `;\n\n  const ButtonMobile = styled.button`\n  background-color: #48bf84;\n  color: white;\n  font-size: 19pt;\n  font-weight: 600;\n  border: none;\n `;\n\n  const ScreenShotImage = styled.img`\n  height: 125vh;\n  align-self: center;\n  `;\n\n  const ScreenShotImageMobile = styled.img`\n  align-self: center;\n  `;\n\n  const TextView = styled.div`\n  width: 50%;\n  align-self: center;\n  justify-content: center;\n  padding: 5rem;\n  display: flex;\n  flex-direction: column\n  `;\n\n  const BoldText = styled.span`\n  font-size: 45pt;\n  font-family: Poppins;\n  font-weight: bold;\n  color: white;\n  text-align: left;\n  white-space: pre-wrap;\n  `;\n\n  const BoldTextMobile = styled.span`\n  font-size: 25pt;\n  font-family: Poppins;\n  font-weight: bold;\n  color: white;\n  white-space: pre-wrap;\n  `;\n\n  const RegularText = styled.span`\n  font-size: 17pt;\n  font-family: Open Sans;\n  font-weight: 600;\n  color: white;\n  text-align: left;\n  `;\n\n  const RegularTextMobile = styled.span`\n  font-size: 15pt;\n  font-family: Open Sans;\n  font-weight: bolder;\n  color: white;\n  `;\n\n  // eslint-disable-next-line no-underscore-dangle\n  const _onClickDownload = () => {\n    window.open('https://github.com/Michael24884/TaiYaKiAnime/');\n  };\n\n  const Block = (index: number, title: string, description: string) => (\n    <div className=\"Block\">\n      {index === 0 ? <FiGlobe size={60} color=\"white\" /> : index === 1 ? <FiRss size={60} color=\"white\" /> : <FiBookOpen size={60} color=\"white\" />}\n      <BoldText style={{ textAlign: 'center', fontSize: 30, marginTop: 8 }}>{title}</BoldText>\n      <RegularText style={{ marginTop: 8, textAlign: 'center', fontSize: 21 }}>{description}</RegularText>\n    </div>\n  );\n\n  const DesktopRender = () => (\n    <div className=\"App\">\n      <View style={{\n        justifyContent: 'center', alignItems: 'center', flexDirection: 'column', height: 825, backgroundColor: 'pink',\n      }}\n      >\n        <View style={{ flexDirection: 'row' }}>\n          <TextView>\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\n\n              <BoldText>\n                <BoldText style={{ color: '#d129af' }}>Taiyaki</BoldText>\n                {' '}\n                an anime app of the century\n              </BoldText>\n            </div>\n            <RegularText style={{ marginTop: 12, width: '75%' }}>Watch your anime and track them all on your favorite tracker. And More</RegularText>\n            <RegularText style={{ marginTop: 12, color: 'orange' }}>Free. No Ads. Forever.</RegularText>\n            <Button onClick={_onClickDownload}>View on Github</Button>\n            <RegularText style={{\n              fontSize: 16, textAlign: 'center', width: '40%', marginTop: 5,\n            }}\n            >\n              Or scroll down to see more\n            </RegularText>\n          </TextView>\n          <animated.img ref={mock1Ref} style={props} src={mock1} alt=\"mock1\" className=\"Image-View\" />\n        </View>\n      </View>\n\n      <View style={{ overflow: 'hidden' }}>\n        <img\n          className=\"Background-Image\"\n          src={background1}\n          alt=\"background_1\"\n        />\n        <div style={{ position: 'absolute', flexDirection: 'row', display: 'flex' }}>\n          <ScreenShotImage src={trackerMock} alt=\"Multi Tracker\" />\n          <TextView>\n            <BoldText style={{ fontSize: 40 }}>Keep track of all the anime {'you\\'ve'} seen</BoldText>\n            <RegularText style={{ color: 'orange', marginTop: 8, marginBottom: 8 }}>Taiyaki supports MyAnimeList, Anilist, SIMKL, and more to come.</RegularText>\n            <RegularText>No need to worry about updating after every episode. Taiyaki does all the work for you.</RegularText>\n          </TextView>\n          <ScreenShotImage src={updateStatusMock} alt=\"Updating Status\" />\n        </div>\n      </View>\n\n      <View style={{ overflow: 'hidden', marginTop: 50 }}>\n        <img src={background2} alt=\"background_2\" className=\"Background-Image\" />\n        <div style={{ position: 'absolute', flexDirection: 'row', display: 'flex' }}>\n          <TextView style={{ width: '40%' }}>\n            <BoldText style={{ fontSize: 40 }}>Watch it all at once</BoldText>\n            <RegularText style={{ color: 'orange', marginTop: 8, marginBottom: 8 }}>Queue support to binge watch all your favorite anime</RegularText>\n            <RegularText>With queue you {'don\\'t'} need to keep going out of the player. Episodes play right after another, true binge watching.</RegularText>\n          </TextView>\n          <ScreenShotImage style={{ marginLeft: 50 }} src={queueMock} alt=\"Queue\" />\n        </div>\n      </View>\n\n      <View style={{ overflow: 'hidden', marginTop: 50 }}>\n        <img src={background3} className=\"Background-Image\" alt=\"background_3\" />\n\n        <div style={{\n          position: 'absolute', flexDirection: 'row', display: 'flex', flex: 1, justifyContent: 'center',\n        }}\n        >\n          <ScreenShotImage style={{ marginLeft: 50 }} src={spoilerMock} alt=\"Anti-Spoiler\" />\n          <TextView style={{ width: '40%' }}>\n            <BoldText style={{ fontSize: 40, textAlign: 'right' }}>Data powered episodes</BoldText>\n            <RegularText style={{\n              color: 'orange', marginTop: 8, textAlign: 'right', marginBottom: 8,\n            }}\n            >\n              Powered by SIMKL\n            </RegularText>\n            <RegularText style={{ textAlign: 'right' }}>With data from SIMKL, each episode has synopsis so you can get an idea. With the ability to blur out spoilers for unwatched episodes, you {'won\\'t'} have to worry about accidental reveals.</RegularText>\n          </TextView>\n        </div>\n      </View>\n\n      <View style={{\n        height: 250, marginTop: 10, marginBottom: 18, flex: 1, flexDirection: 'row', display: 'flex', justifyContent: 'space-evenly',\n      }}\n      >\n        {Block(0, 'Community Driven', 'Taiyaki is inspired by the community and is adaptive to any suggestions')}\n        {Block(1, 'Multiple Sources', 'Sources are web scraped allowing flexibility in choices and multi-language support')}\n        {Block(2, 'Open Source', 'This project is open sourced and available to the public')}\n      </View>\n\n    </div>\n  );\n\n  // const _MobileImageBackground = (): JSX.Element => {\n  //   return (\n  //     <ViewMobile>\n  //       <img src={background1} alt={'background_1'} className=\"Background-Image\" />\n  //     </ViewMobile>\n  //   )\n  // }\n\n  const MobileRender = () => (\n    <ViewMobile className=\"App-Mobile\">\n      <BoldTextMobile style={{ marginTop: 25 }} className=\"Text-Mobile\">\n        <BoldTextMobile style={{ color: '#d129af' }}>Taiyaki</BoldTextMobile>\n        {' '}\n        an anime app of the century\n      </BoldTextMobile>\n      <ScreenShotImageMobile src={mock1} className=\"Image-Mobile\" />\n      <RegularTextMobile className=\"Text-Mobile\">Watch your anime and track them all on your favorite tracker. And More</RegularTextMobile>\n\n      <div style={{ flexDirection: 'column', display: 'flex' }}>\n        <ButtonMobile onClick={_onClickDownload} className=\"Button-Mobile\">View on Github</ButtonMobile>\n        <RegularTextMobile className=\"ScrollDown-Text\" style={{ fontSize: 14, fontWeight: 'bold' }}>Or scroll down to see more</RegularTextMobile>\n      </div>\n\n      <ViewMobile className=\"View-Mobile-Extra\">\n        <img src={background1} alt=\"background_1\" className=\"Background-Image\" />\n\n        <div className=\"div-mobile\">\n          <ScreenShotImageMobile src={trackerMock} className=\"Image-Mobile\" />\n          <BoldTextMobile className=\"Text-Mobile\">Keep track of all the anime {'you\\'ve'} seen</BoldTextMobile>\n          <ScreenShotImageMobile src={updateStatusMock} className=\"Image-Mobile\" />\n          <RegularTextMobile className=\"Text-Mobile\" style={{ color: 'orange' }}>Taiyaki supports MyAnimeList, Anilist, SIMKL, and more to come.</RegularTextMobile>\n\n          <RegularTextMobile className=\"Text-Mobile\">No need to worry about updating after every episode. Taiyaki does all the work for you.</RegularTextMobile>\n        </div>\n      </ViewMobile>\n\n      <ViewMobile className=\"View-Mobile\">\n        <img src={background2} alt=\"background_2\" className=\"Background-Image\" />\n\n        <div className=\"div-mobile\">\n          <ScreenShotImageMobile src={queueMock} className=\"Image-Mobile\" />\n          <BoldTextMobile className=\"Text-Mobile\">Watch it all at once</BoldTextMobile>\n          <RegularTextMobile className=\"Text-Mobile\" style={{ color: 'orange' }}>Queue support to binge watch all your favorite anime</RegularTextMobile>\n          <RegularTextMobile className=\"Text-Mobile\">With queue you {'don\\'t'} need to keep going out of the player. Episodes play right after another, true binge watching.</RegularTextMobile>\n        </div>\n\n      </ViewMobile>\n\n      <ViewMobile className=\"View-Mobile\">\n        <img src={background3} alt=\"background_2\" className=\"Background-Image\" />\n\n        <div className=\"div-mobile\">\n          <ScreenShotImageMobile src={spoilerMock} className=\"Image-Mobile\" />\n          <BoldTextMobile className=\"Text-Mobile\">Data powered episodes</BoldTextMobile>\n          <RegularTextMobile className=\"Text-Mobile\" style={{ color: 'orange' }}>Powered by SIMKL</RegularTextMobile>\n          <RegularTextMobile className=\"Text-Mobile\">With data from SIMKL, each episode has synopsis so you can get an idea. With the ability to blur out spoilers for unwatched episodes, you {'won\\'t'} have to worry about accidental reveals.</RegularTextMobile>\n        </div>\n\n      </ViewMobile>\n\n      <ViewMobile className=\"View-Mobile\">\n        {Block(0, 'Community Driven', 'Taiyaki is inspired by the community and is adaptive to any suggestions')}\n        {Block(1, 'Multiple Sources', 'Sources are web scraped allowing flexibility in choices and multi-language support')}\n        {Block(2, 'Open Source', 'This project is open sourced and available to the public')}\n      </ViewMobile>\n\n    </ViewMobile>\n  );\n\n  return isDesktopOrLaptop ? DesktopRender() : MobileRender();\n\n  // return (\n  //   <div className=\"App\">\n  //     <header className=\"App-header\">\n  //       <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //       <p>\n  //         Edit <code>src/App.tsx</code> and save to reload.\n  //       </p>\n  //       <a\n  //         className=\"App-link\"\n  //         href=\"https://reactjs.org\"\n  //         target=\"_blank\"\n  //         rel=\"noopener noreferrer\"\n  //       >\n  //         Learn React\n  //       </a>\n  //     </header>\n  //   </div>\n  // );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}